<h1>Slow/Non-existent progress</h1>
<p>It was initially decided that I use V8 to embed javascript while exporting wrappers to OpenGL and libsoundio. It is said that V8 is fast because it compiles javascript to machine code, however V8 has really poor documentation and a horrible C++ API. Using the old V8 library available from Ubuntu's repositories, I was able to mess around with it but there are problems I ran into regarding V8's mysterious garbage collection that cannot be explained due to either bugs or my lack of understanding with it's API when I perform the most simple tests.</p>
<p>Even if I do get V8 working for me on Linux, there's still the monumental task of compiling it for Windows as well as making sure that binary versions and development header versions are consistent between each other and across platforms. V8 is not known to keep a stable API.</p>
<p>I will stick to Lua. Lua has a light language, a light API with zero dependencies, and it's most likely going to be fast enough for now. It would be nice of course to have a scripting language better than both Lua and Javascript. It would be nice to have a scripting language with curly braces and real integer types, especially fixed width integers. Lua and Javascript only support the "Number" type which is a double-precision float but it can apparantly store an integer from the embedder's side but it gets immediately converted back into a double when accessed from the script's side. As a relatively low-level programmer, I would simply like to have a statically-typed scripting language that does not have a garbage collector running in the background. I do not like the idea of variables changing their types during runtime randomly. I also do not like having immutable variables simulate mutation by reassigning themselves from newly allocated objects, it's a waste of memory and computation.</p>
<p>I know how to manage my memory so let me do that and let me modify my data directly. I know what types I'm working with so do not convert unless I explicitly say so. Two types of languages I dislike: the languages that try to make everything easy for me and the languages that try to make everything safe for me. A language that's easy means slow performance caused by unnecessary memory allocation and unnecessary computation. A languages that's safe means loss of power and expression caused by unnecessary restrictions on data mutation, memory access, and forced exception handling.</p>
<p>So what do I want? An embeddable, statically-typed, RAII, low-level, C-like scripting language with mutable variables, that compiles ahead-of-time to platform-independent byte code.</p>
<p>This has actually already been done before: it's called Quake-C. It was made by id software over 20 years ago for Quake III and it still works pretty damn well today.</p>
<p>A great game starts with a great game engine that is completely built from the ground up, and that's what the creators of DOOM and Quake did. They started with the game engine, that was the primary focus, and the games built on top of it were relatively an afterthought. DOOM was solid when it was created and they gave it out to stores for free.</p>
<p>Today, bad games engines with even more badly made games are strung together with an alpha/beta tag and coupled with bugs, crashes, and frame drops and sold for money with additional DLC microtransactions. And who's buying this crap? I imagine mostly children of rich families with monster computers that can afford to run heavy, poorly made programs while taking minimal performance hits.</p>
<p>As for the current state of Quake Champions, nothing has changed. Actually it got worse. I am experiencing this QC bug where 100% of my CPU is used by that game all the time, including during the lobby. I was able to fix it by setting the CPU affinity to not use the first CPU core from the task manager. This is sad, so it looks like there's a bug where the game doesn't multithread properly because of a bottle neck in the code. I watch rapha's stream, the #1 quake player in the world, and even his PC can't maintain a stable framerate with that game: it flucuates between 200 and 240 fps. Meanwhile my PC's framerate flucuates between 100 and 140, it's completely unacceptable when my 4 year old PC can maintain a stable 300 fps with ioquake3 games and Quake Live.</p>
<p>I tried everything, I deleted QC appdata, downloaded nvidia inspector, modified obscure and possibly undocumented nvidia settings to do everything I can to put the graphics settings at the lowest to see if I can boost Quake Champions performance. Nothing made a difference.</p>
<p>One of the top critical reviews for Quake Champions on steam says it all:</p>
<blockquote>
<p>Even after years, mouse input still feels floaty and inconsistent, frame times are all over the place, and the game thrashes your CPU worse than Korean MMOs. QC's Russian memeware engine guarantees that it will perform like garbage on any PC, no matter what your graphics settings areâ€”and no matter how many times id and Saber claim they've fixed the issues. There are plenty of things to complain about, from the duel format to champion balance to the immense downtime between games, but it all comes second to the fact that the game runs like trash and cannot be fixed.</p>
<p>To put this amount of money and man-hours into a game, only to end up with a product that's obsoleted by a 10-year-old browser game in every category but visuals, is a <i>historic</i> failure.</p>
-- <i>TyroneSama</i>
</blockquote>
<p>CS:GO and Overwatch are polished and fast but the TTK is way too low for me to enjoy those games. Getting killed in 1 shot from full health is never fun. Playing on a team, in general, is never fun because every video game seems to have bad matchmaking. Matchmaking only seems to be better in more popular games because there are more players to mix and match together. I don't think it's possible to calculate a skill rating for individual players except for 1v1 games like Chess. In team-based games, being carried happens way more than carrying and so it is generally the case that the team with the 2nd worst player will win because a team is only as good as it's worst player. There are no individual humans existing today who can redeem the biggest human failures, we are too equal and God is dead.</p>
